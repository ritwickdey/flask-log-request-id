name: Publish

on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8.x'
    - name: Create environment and build distribution
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install -U pip setuptools wheel build
        rm -rf dist/
        python -m build
        python setup.py --version > version.txt
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
    - name: Upload version file
      uses: actions/upload-artifact@v3
      with:
        name: version
        path: version.txt

  deploy_pypi:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist

    - name: Download version file
      uses: actions/download-artifact@v3
      with:
        name: version

    - name: Upload to PyPI
      # env:
      #   TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #   TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cat version.txt
        VERSION=$(cat version.txt)
        python3 -m venv venv
        . venv/bin/activate
        pip install -U pip setuptools twine
        twine upload dist/*

  install_from_pypi:
    runs-on: ubuntu-latest
    needs: deploy_pypi

    steps:
    - uses: actions/checkout@v3
    
    - name: Download version file
      uses: actions/download-artifact@v3
      with:
        name: version

    - name: Install from PyPI
      run: |
        cat version.txt
        python3 -m venv venv
        . venv/bin/activate
        pip install flask-3-log-request-id==`cat version.txt`
        pip freeze | grep -i flask-3-log-request-id
